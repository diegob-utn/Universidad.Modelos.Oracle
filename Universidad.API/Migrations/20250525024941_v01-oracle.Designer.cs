// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Universidad.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525024941_v01-oracle")]
    partial class v01oracle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventoPonente", b =>
                {
                    b.Property<int>("EventosId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PonentesId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EventosId", "PonentesId");

                    b.HasIndex("PonentesId");

                    b.ToTable("EventoPonente");
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.Property<int>("PonentesId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SesionesId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PonentesId", "SesionesId");

                    b.HasIndex("SesionesId");

                    b.ToTable("PonenteSesion");
                });

            modelBuilder.Entity("Universidad.Modelos.Certificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Universidad.Modelos.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Universidad.Modelos.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Universidad.Modelos.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Medio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Universidad.Modelos.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SesionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("SesionId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("Universidad.Modelos.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("Universidad.Modelos.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("EventoPonente", b =>
                {
                    b.HasOne("Universidad.Modelos.Evento", null)
                        .WithMany()
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Ponente", null)
                        .WithMany()
                        .HasForeignKey("PonentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.HasOne("Universidad.Modelos.Ponente", null)
                        .WithMany()
                        .HasForeignKey("PonentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Sesion", null)
                        .WithMany()
                        .HasForeignKey("SesionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Universidad.Modelos.Certificado", b =>
                {
                    b.HasOne("Universidad.Modelos.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Universidad.Modelos.Inscripcion", b =>
                {
                    b.HasOne("Universidad.Modelos.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Universidad.Modelos.Pago", b =>
                {
                    b.HasOne("Universidad.Modelos.Inscripcion", "Inscripcion")
                        .WithMany()
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("Universidad.Modelos.Participante", b =>
                {
                    b.HasOne("Universidad.Modelos.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Sesion", "Sesion")
                        .WithMany("Participantes")
                        .HasForeignKey("SesionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("Universidad.Modelos.Sesion", b =>
                {
                    b.HasOne("Universidad.Modelos.Evento", "Evento")
                        .WithMany("Sesiones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Universidad.Modelos.Evento", b =>
                {
                    b.Navigation("Participantes");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("Universidad.Modelos.Sesion", b =>
                {
                    b.Navigation("Participantes");
                });
#pragma warning restore 612, 618
        }
    }
}
